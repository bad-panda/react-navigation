{"version":3,"sources":["Card.tsx"],"names":["React","Animated","View","StyleSheet","Platform","InteractionManager","Color","CardSheet","PanGestureHandler","GestureState","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","OS","Card","Component","Value","props","gestureDirection","width","layout","height","closing","velocity","gesture","transitionSpec","onOpen","onClose","onTransitionStart","toValue","getAnimateToValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartAnimationInteraction","clearTimeout","pendingGestureCallback","config","isInteraction","start","finished","console","debug","handleEndAnimationInteraction","enabled","pointerEvents","contentRef","current","setNativeProps","interactionHandle","undefined","log","createInteractionHandle","clearInteractionHandle","interactionHandleAnim","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","BEGAN","isSwiping","setValue","handleStartInteraction","CANCELLED","handleEndInteraction","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","index","next","insetTop","insetRight","insetBottom","insetLeft","progress","isClosing","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","gestureActivationCriteria","gestureResponseDistance","vertical","horizontal","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","children","containerStyle","customContainerStyle","contentStyle","rest","interpolatedStyle","getInterpolatedStyle","animationContext","getCardAnimationContext","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","flatten","isTransparent","alpha","absoluteFill","style","styles","container","handleGestureStateChange","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  Platform,\n  InteractionManager,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\nimport Color from 'color';\n\nimport CardSheet from './CardSheet';\nimport {\n  PanGestureHandler,\n  GestureState,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  TransitionSpec,\n  StackCardStyleInterpolator,\n  GestureDirection,\n  Layout,\n} from '../../types';\n\ntype Props = ViewProps & {\n  index: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransitionStart?: (props: { closing: boolean }) => void;\n  onGestureBegin?: () => void;\n  onGestureCanceled?: () => void;\n  onGestureEnd?: () => void;\n  children: React.ReactNode;\n  overlay: (props: { style: StyleProp<ViewStyle> }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    overlayEnabled: Platform.OS !== 'ios',\n    shadowEnabled: true,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({ style }: { style: StyleProp<ViewStyle> }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    if (\n      this.getAnimateToValue(this.props) !== this.getAnimateToValue(prevProps)\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    console.log('Card componentWillUnmount end interactions')\n    this.handleEndInteraction();\n    this.handleEndAnimationInteraction();\n  }\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n  private interactionHandleAnim: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransitionStart,\n    } = this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartAnimationInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransitionStart?.({ closing });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      console.debug('Card - animation callback finished?:', finished, 'closing?:', closing)\n      this.handleEndAnimationInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.contentRef.current?.setNativeProps({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      console.log('handleStartGestureInteraction - create handle');\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      console.log('handleEndGestureInteraction - clear handle');\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleStartAnimationInteraction = () => {\n    if (this.interactionHandleAnim === undefined) {\n      console.log('handleStartAnimationInteraction - create handle');\n      this.interactionHandleAnim = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndAnimationInteraction = () => {\n    if (this.interactionHandleAnim !== undefined) {\n      console.log('handleEndAnimationInteraction - clear handle');\n      InteractionManager.clearInteractionHandle(this.interactionHandleAnim);\n      this.interactionHandleAnim = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.BEGAN:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = (setTimeout(\n            onClose,\n            32\n          ) as any) as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) =>\n      styleInterpolator({\n        index,\n        current: { progress: current },\n        next: next && { progress: next },\n        closing: this.isClosing,\n        swiping: this.isSwiping,\n        inverted: this.inverted,\n        layouts: {\n          screen: layout,\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft,\n        },\n      })\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimationContext = memoize(\n    (\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n\n    const distance =\n      gestureDirection === 'vertical' ||\n      gestureDirection === 'vertical-inverted'\n        ? gestureResponseDistance?.vertical !== undefined\n          ? gestureResponseDistance.vertical\n          : GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : gestureResponseDistance?.horizontal !== undefined\n        ? gestureResponseDistance.horizontal\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n        };\n      }\n    }\n  }\n\n  private contentRef = React.createRef<View>();\n\n  render() {\n    const {\n      styleInterpolator,\n      index,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const animationContext = this.getCardAnimationContext(\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle,\n    } = interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent = backgroundColor\n      ? Color(backgroundColor).alpha() === 0\n      : false;\n\n    return (\n      <CardAnimationContext.Provider value={animationContext}>\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View style={[styles.container, cardStyle]}>\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.contentRef}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"]}